name: Release

on:
  workflow_call:
    inputs:
      atomi_platform:
        required: true
        type: string
      atomi_service:
        required: true
        type: string
      cache:
        default: 'all'
        type: string

jobs:
  cacheshell:
    name: Cache Shell
    strategy:
      matrix:
        platform:
          - name: Linux x86_64
            os:
              - nscloud-ubuntu-22.04-amd64-4x8-with-cache
              - nscloud-cache-size-50gb
              - nscloud-cache-tag-${{ inputs.atomi_platform }}-${{ inputs.atomi_service }}-nix-store-cache
          - name: Linux aarch64
            os:
              - nscloud-ubuntu-22.04-arm64-4x8-with-cache
              - nscloud-cache-size-50gb
              - nscloud-cache-tag-${{ inputs.atomi_platform }}-${{ inputs.atomi_service }}-nix-store-cache
          - name: MacOS x86_64
            os:
              - macos-13
          - name: MacOS aarch64
            os:
              - macos-15
    runs-on: ${{ matrix.platform.os }}
    steps:
      # Setup
      - uses: AtomiCloud/actions.setup-nix@Ernest/CU-86etuanhu/Attic-Action-Use-attic-binary-cache-in-setup-nix-CI-action-when-detecting-ATTICTOKEN
        with:
          attic-token: ${{ secrets.ATTIC_TOKEN }}
      # Build and Push Shell
      - name: Build and Push Shell
        run: nix develop .#ci -c scripts/cache-shell.sh "${{ inputs.cache }}"
