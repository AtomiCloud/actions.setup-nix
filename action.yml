name: Setup AtomiCloud CI Nix
description: 'Setup AtomiCloud CI Nix (Compatible with Namespace)'
inputs:
  namespacelabs:
    default: 'true'
    description: "Using Namespace Lab's runners"
  checkout:
    default: 'true'
    description: 'Whether to checkout the repository'
  short-length:
    default: 7
    description: length for short values
  auth-bot-app-id:
    default: ''
    description: App Id for auth bot
  auth-bot-secret-key:
    default: ''
    description: Private key for auth bot
  attic:
    default: 'true'
    description: 'Configure attic as substituters'
  attic-user:
    default: 'atomicloud'
    description: 'User for attic'
  attic-url:
    default: 'https://attic-atomicloud.fly.dev'
    description: 'URL for attic'
  attic-public-key:
    default: 'all:uiWsynIsiSHKa2RuLZ3+8yE9lm1EVstE9RQ6RvRnVgU='
    description: 'Public key for attic'
  attic-cache:
    default: 'all'
    description: 'Cache attic'
  attic-token:
    default: ''
    description: 'Token for attic'

branding:
  color: blue
  icon: settings

runs:
  using: 'composite'
  steps:
    - name: Inject enhanced GitHub environment variables
      uses: rlespinasse/github-slug-action@v5.x
      with:
        short-length: ${{ inputs.short-length }}

    - name: Generate Github App Token
      uses: actions/create-github-app-token@v1
      if: inputs.auth-bot-app-id != '' && inputs.auth-bot-secret-key != ''
      id: app-token
      with:
        app-id: ${{ inputs.auth-bot-app-id }}
        private-key: ${{ inputs.auth-bot-secret-key }}

    - name: Checkout Repository With Auth Bot
      if: inputs.checkout == 'true' && inputs.auth-bot-app-id != '' && inputs.auth-bot-secret-key != ''
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.app-token.outputs.token }}

    - name: Checkout Config
      if: inputs.checkout == 'true' && inputs.auth-bot-app-id != '' && inputs.auth-bot-secret-key != ''
      shell: bash
      run: |
        git config user.name auth-bot
        git config user.email auth-bot@atomi.cloud

    - name: Checkout Repository
      if: inputs.checkout == 'true' && inputs.auth-bot-app-id == '' && inputs.auth-bot-secret-key == ''
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # NAMESPACE LAB VERSION
    - name: Setup Nix Folder
      shell: bash
      if: inputs.namespacelabs == 'true'
      run: |
        sudo mkdir /nix
        sudo chown $USER /nix
    - name: Cache Nix
      uses: namespacelabs/nscloud-cache-action@v1
      if: inputs.namespacelabs == 'true'
      with:
        path: /nix
    - name: Install Nix
      if: inputs.namespacelabs == 'true' && inputs.attic == 'true'
      uses: cachix/install-nix-action@v30
      with:
        extra_nix_config: |
          fallback = true
          substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/ ${{ inputs.attic-url }}/${{ inputs.attic-cache }}?priority=43
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE= ${{ inputs.attic-public-key }}
    - name: Install Nix
      if: inputs.namespacelabs == 'true' && inputs.attic == 'false'
      uses: cachix/install-nix-action@v30
      with:
        extra_nix_config: |
          fallback = true
          substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=

    # NATIVE VERSION
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      if: inputs.namespacelabs == 'false' && inputs.attic == 'true'
      with:
        extra-conf: |
          fallback = true
          substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/ ${{ inputs.attic-url }}/${{ inputs.attic-cache }}?priority=43
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE= ${{ inputs.attic-public-key }}

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      if: inputs.namespacelabs == 'false' && inputs.attic == 'false'
      with:
        extra-conf: |
          fallback = true
          substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=

    # SETUP ATTIC
    - name: Install Attic
      shell: bash
      if: inputs.attic-token != '' && inputs.attic == 'true'
      run: |
        nix profile install github:zhaofengli/attic#default

    - name: Login to Attic
      shell: bash
      if: inputs.attic-token != '' && inputs.attic == 'true'
      run: |
        attic login "${{ inputs.attic-user }}" "${{ inputs.attic-url }}" "${{ inputs.attic-token }}"
